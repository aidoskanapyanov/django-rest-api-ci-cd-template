name: deployment

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

  DJANGO_ACCOUNT_ALLOW_REGISTRATION: ${{ secrets.DJANGO_ACCOUNT_ALLOW_REGISTRATION }}
  DJANGO_ADMIN_URL: ${{ secrets.DJANGO_ADMIN_URL }}
  DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
  DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
  DJANGO_SECURE_SSL_REDIRECT: ${{ secrets.DJANGO_SECURE_SSL_REDIRECT }}
  DJANGO_SERVER_EMAIL: ${{ secrets.DJANGO_SERVER_EMAIL }}
  DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  REDIS_URL: ${{ secrets.REDIS_URL }}
  WEB_CONCURRENCY: ${{ secrets.WEB_CONCURRENCY }}
  DJANGO_IMAGE: ${{ secrets.DJANGO_IMAGE }}
  NGINX_IMAGE: ${{ secrets.NGINX_IMAGE }}
  POSTGRES_IMAGE: ${{ secrets.POSTGRES_IMAGE }}
  TRAEFIK_IMAGE: ${{ secrets.TRAEFIK_IMAGE }}
  DJANGO_READ_DOT_ENV_FILE: ${{ secrets.DJANGO_READ_DOT_ENV_FILE }}

on:
  workflow_run:
    workflows: [tests]
    types:
      - completed
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-and-push-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and cache docker compose
        uses: docker/bake-action@v3
        with:
          push: true
          load: false
          files: docker-compose.production.yml
          set: |
            django.cache-from=type=gha,scope=deploy-django-cache
            django.cache-to=type=gha,scope=deploy-django-cache,mode=max
            postgres.cache-from=type=gha,scope=deploy-postgres-cache
            postgres.cache-to=type=gha,scope=deploy-postgres-cache,mode=max
            traefik.cache-from=type=gha,scope=deploy-traefik-cache
            traefik.cache-to=type=gha,scope=deploy-traefik-cache,mode=max
            nginx.cache-from=type=gha,scope=deploy-nginx-cache
            nginx.cache-to=type=gha,scope=deploy-nginx-cache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-images
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker Stack deploy
        uses: serversideup/github-action-docker-swarm-deploy@v3
        with:
          docker_compose_file_path: -c docker-compose.production.yml
          ssh_deploy_user: root
          ssh_deploy_private_key: ${{ secrets.DIGITAL_OCEAN_SSH_PRIVATE_KEY }}
          ssh_remote_hostname: ${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}
          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
          registry-token: ${{ secrets.DOCKERHUB_TOKEN }}
          stack_name: fuel-tracker
